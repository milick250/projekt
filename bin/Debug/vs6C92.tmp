<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Seminar</name>
    </assembly>
    <members>
        <member name="F:Seminar.Form1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Seminar.Form1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Seminar.Form1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Seminar.Form2.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Seminar.Form2.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Seminar.Form2.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Seminar.BGL">
            <summary>
            -
            </summary>
        </member>
        <member name="F:Seminar.BGL.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Seminar.BGL.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Seminar.BGL.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Seminar.Game">
            <summary>
            Klasa za općenite aktivnosti vezane uz igru.
            </summary>
        </member>
        <member name="M:Seminar.Game.WaitMS(System.Int32)">
            <summary>
            Pauzira izvršavanje trenutne metode
            </summary>
            <param name="ms"></param>
        </member>
        <member name="M:Seminar.Game.AddSprite(Seminar.Svi)">
            <summary>
            Metoda za dodavanje novih likova u listu svih postojećih likova
            </summary>
            <param name="s">Sprite kojeg dodajemo u listu svih likova.</param> 
        </member>
        <member name="M:Seminar.Game.StartScript(System.Func{System.Int32})">
            <summary>
            Metoda koja poziva paralelno izvršavanje metode <c>scriptName</c>.
            </summary>
            <param name="scriptName"></param>
            <example>
            <para>Metoda (skripta ili procedura) koju pokreće <c>Game.StartScript</c> mora biti napisana na određen način inače se neće prihvatiti. 
            Metoda mora imati povratnu vrijednost tipa <c>int</c> koja se može koristiti za povratnu informaciju je li se dogodila pogreška (npr. 0 nije bilo pogreške). 
            Sve metode/skripte pozvane putem Game.StartScript() se izvršavaju istovremeno.
            </para>
            Primjer:
            <code>
            private int MetodaLika()
            {
                //kod
                return 0;
            }
            </code>
            <para>Obično se za aktivnosti lika koje traju dulje vrijeme (ili tijekom trajanja igre) koristi petlja while. 
            Pri tome se za uvjet petlje koristi vrijabla START (vidi: <see cref="F:Seminar.BGL.START"/>).
            <code>
            while (START)
            {
                //radi nešto
            }
            </code>
            </para>
            </example>
        </member>
        <member name="T:Seminar.GameOptions">
            <summary>
            Game options
            </summary>
        </member>
        <member name="T:Seminar.Sensing">
            <summary>
            Klasa <c>Sensing</c> služi za očitavanje događaja s tipkovnice i miša.
            </summary>
        </member>
        <member name="F:Seminar.Sensing.key">
            <summary>
            Miš pritisnut.
            </summary>
        </member>
        <member name="P:Seminar.Sensing.KeyPressedTest">
            <summary>
            Je li bilo koja tipka pritisnuta.
            </summary>
        </member>
        <member name="P:Seminar.Sensing.Key">
            <summary>
            Tipka koja je pritisnuta (string).
            </summary>
        </member>
        <member name="M:Seminar.Sensing.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="M:Seminar.Sensing.KeyPressed(System.String)">
            <summary>
            Provjerava je li tipka koja je poslana kao parametar pritisnuta.
            </summary>
            <param name="keyName">Naziv tipke.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:Seminar.Sensing.KeyPressed(System.Windows.Forms.Keys)">
            <summary>
            Provjerava je li tipka koja je poslana kao parametar pritisnuta.
            </summary>
            <param name="key">Ugrađeni tip <c>Keys</c></param>
            <returns>true/false</returns>
        </member>
        <member name="M:Seminar.Sensing.KeyPressed">
            <summary>
            Provjerava je li bilo koja tipka pritisnuta.
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:Seminar.Sensing.KeyUp">
            <summary>
            Tipka otpuštena.
            </summary>
        </member>
        <member name="M:Seminar.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="P:Seminar.Svi.X">
            <summary>
            X koordinata.
            </summary>
            <remarks><c>set</c> osigurava da lik ne izlazi van ruba <see cref="T:Seminar.GameOptions"/></remarks>
        </member>
        <member name="P:Seminar.Svi.Y">
            <summary>
            Y koordinata.
            </summary>
            <remarks><c>set</c> osigurava da lik ne izlazi van ruba <see cref="T:Seminar.GameOptions"/></remarks>
        </member>
        <member name="F:Seminar.Svi.RotationStyle">
             <summary>
             Stil rotacije.
             Za LeftRight ne radi rotacija slike.
             </summary>
            <remarks>Pogledajte: <see cref="!:Svi.RotationStylesType"/></remarks>
        </member>
        <member name="F:Seminar.Svi.CurrentCostume">
            <summary>
            Trenutna slika (kostim) lika.
            </summary>
        </member>
        <member name="M:Seminar.Svi.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Konstruktor za Sprite.
            </summary>
            <param name="spriteImage">naziv/putanja slike</param>
            <param name="posX">x koordinata lika</param>
            <param name="posY">y koordinata lika</param>
            <remarks>Sprite se može instancirati i uz pomoć metode NewSprite koja se nalazi u klasi Game: <see cref="!:Game.NewSprite"/>.</remarks>
        </member>
        <member name="M:Seminar.Svi.SetX(System.Int32)">
            <summary>
            Postavlja x koordinatu.
            </summary>
            <param name="posX">x koordinata.</param>
        </member>
        <member name="M:Seminar.Svi.SetY(System.Int32)">
            <summary>
            Postavlja y koordinatu.
            </summary>
            <param name="posY">y koordinata.</param>
        </member>
        <member name="M:Seminar.Svi.ChangeX(System.Int32)">
            <summary>
            Promijeni x koordinatu za n.
            </summary>
            <example>Promijeni x koordinatu za 5:
            <code>lik.ChangeX(5);</code>
            </example>
            <param name="n">cijeli broj za koji se mijenja x koordinata.</param>
        </member>
        <member name="M:Seminar.Svi.ChangeY(System.Int32)">
            <summary>
            Promijeni y koordinatu za n.
            </summary>
            <param name="n">cijeli broj za koji se mijenja y koordinata.</param>
        </member>
        <member name="M:Seminar.Svi.SetTransparentColor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Postavlja prozirnu boju.
            </summary>
            <param name="r">-</param>
            <param name="g">-</param>
            <param name="b">-</param>
        </member>
        <member name="M:Seminar.Svi.SetTransparentColor(System.Drawing.Color)">
            <summary>
            Postavlja prozirnu boju.
            </summary>
            <remarks>Tip <see cref="T:System.Drawing.Color"/> je postojeći tip u C#.</remarks>
            <param name="color">boja lika</param>
        </member>
        <member name="M:Seminar.Svi.SetSize(System.Int32)">
            <summary>
            Postavi veličinu lika. Ako se postavi 100, vraća se na početnu.
            Ako se postavi na manje od 100 lik će se smanjiti, 
            a ako se postavi na veće od 100, lik će se povećati.
            </summary>
            <param name="size">Veličina lika (postotak).</param>
        </member>
        <member name="M:Seminar.Svi.SetVisible(System.Boolean)">
            <summary>
            Postavlja vidljivost lika.
            </summary>
            <example>Ovo se može postići i postavljanjem vrijednosti Show na true ili false:
            <code>lik.Show = true;</code></example>
            <param name="value">true ili false</param>
        </member>
        <member name="M:Seminar.Svi.Dodirnuo_rub(System.String@)">
            <summary>
            Provjerava da li lik dira rub pozornice/prozora.
            </summary>
            <returns>vraća true ako dira, odnosno false ako ne dira.</returns>
        </member>
        <member name="T:Seminar.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Seminar.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Seminar.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Seminar.Properties.Resources.background">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Seminar.Properties.Resources.sky">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
    </members>
</doc>
